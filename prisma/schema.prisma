generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid()) @db.Uuid
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  firstName String? @db.VarChar(100)
  lastName  String? @db.VarChar(100)
  email     String  @unique @db.VarChar(100)
  password  String  @db.Text

  Wallet Wallet[]

  @@map("users")
}

model Wallet {
  id        String    @id @default(uuid()) @db.Uuid
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  userId     String @unique @db.Uuid
  user       User   @relation(fields: [userId], references: [id])
  address    String @db.VarChar(20)
  passphrase String

  Transaction Transaction[]

  @@index([userId])
  @@map("wallets")
}

enum TransactionType {
  DEBIT  @map("DEBIT")
  CREDIT @map("CREDIT")
}

enum TransactionStatus {
  PENDING    @map("PENDING")
  SUCCESSFUL @map("SUCCESSFUL")
  FAILED     @map("FAILED")
}

model Transaction {
  id        String    @id @default(uuid()) @db.Uuid
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  walletId  String            @db.Uuid
  wallet    Wallet            @relation(fields: [walletId], references: [id])
  amount    Float             @db.DoublePrecision
  reference String            @db.VarChar(20)
  type      TransactionType
  status    TransactionStatus @default(PENDING)

  @@index([walletId])
  @@map("transactions")
}
